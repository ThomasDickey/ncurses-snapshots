.\"***************************************************************************
.\" Copyright 2018-2020,2021 Thomas E. Dickey                                *
.\" Copyright 1998-2007,2010 Free Software Foundation, Inc.                  *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_border.3x,v 1.29 2021/12/25 21:49:32 tom Exp $
.TH curs_border 3X ""
.ie \n(.g .ds `` \(lq
.el       .ds `` ``
.ie \n(.g .ds '' \(rq
.el       .ds '' ''
.na
.hy 0
.SH NAME
\fBborder\fP,
\fBwborder\fP,
\fBbox\fP,
\fBhline\fP,
\fBwhline\fP,
\fBvline\fP,
\fBwvline\fP,
\fBmvhline\fP,
\fBmvwhline\fP,
\fBmvvline\fP,
\fBmvwvline\fP \- create \fBcurses\fP borders, horizontal and vertical lines
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fP
.sp
\fBint border(chtype \fP\fIls\fP\fB, chtype \fP\fIrs\fP\fB, chtype \fP\fIts\fP\fB, chtype \fP\fIbs\fP\fB,\fP
           \fBchtype \fP\fItl\fP\fB, chtype \fP\fItr\fP\fB, chtype \fP\fIbl\fP\fB, chtype \fP\fIbr\fP\fB);\fP
.br
\fBint wborder(WINDOW *\fP\fIwin\fP\fB, chtype \fP\fIls\fP\fB, chtype \fP\fIrs\fP\fB,\fP
            \fBchtype \fP\fIts\fP\fB, chtype \fP\fIbs\fP\fB, chtype \fP\fItl\fP\fB, chtype \fP\fItr\fP\fB,\fP
            \fBchtype \fP\fIbl\fP\fB, chtype \fP\fIbr\fP\fB);\fP
.sp
\fBint box(WINDOW *\fP\fIwin\fP\fB, chtype \fP\fIverch\fP\fB, chtype \fP\fIhorch\fP\fB);\fP
.sp
\fBint hline(chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
\fBint whline(WINDOW *\fP\fIwin\fP\fB, chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
\fBint vline(chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
\fBint wvline(WINDOW *\fP\fIwin\fP\fB, chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.sp
\fBint mvhline(int \fP\fIy\fP\fB, int \fP\fIx\fP\fB, chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
\fBint mvwhline(WINDOW *\fP\fIwin\fP\fB, int \fP\fIy\fP\fB, int \fP\fIx\fP\fB, chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
\fBint mvvline(int \fP\fIy\fP\fB, int \fP\fIx\fP\fB, chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
\fBint mvwvline(WINDOW *\fP\fIwin\fP\fB, int \fP\fIy\fP\fB, int \fP\fIx\fP\fB, chtype \fP\fIch\fP\fB, int \fP\fIn\fP\fB);\fP
.br
.SH DESCRIPTION
The \fBborder\fP, \fBwborder\fP and \fBbox\fP routines
draw a box around the edges of a window.
Other than the window, each argument is a character with attributes:
.sp
.RS
\fIls\fP \- left side,
.br
\fIrs\fP \- right side,
.br
\fIts\fP \- top side,
.br
\fIbs\fP \- bottom side,
.br
\fItl\fP \- top left-hand corner,
.br
\fItr\fP \- top right-hand corner,
.br
\fIbl\fP \- bottom left-hand corner, and
.br
\fIbr\fP \- bottom right-hand corner.
.RE
.PP
If any of these arguments is zero, then the corresponding
default values (defined in \fBcurses.h\fP) are used instead:
.sp
.RS
\fBACS_VLINE\fP,
.br
\fBACS_VLINE\fP,
.br
\fBACS_HLINE\fP,
.br
\fBACS_HLINE\fP,
.br
\fBACS_ULCORNER\fP,
.br
\fBACS_URCORNER\fP,
.br
\fBACS_LLCORNER\fP,
.br
\fBACS_LRCORNER\fP.
.RE
.PP
\fBbox(\fP\fIwin\fP\fB, \fP\fIverch\fP\fB, \fP\fIhorch\fP\fB)\fP is a shorthand
for the following call: \fBwborder(\fP\fIwin\fP\fB,\fP \fIverch\fP\fB,\fP
\fIverch\fP\fB,\fP \fIhorch\fP\fB,\fP \fIhorch\fP\fB, 0, 0, 0, 0)\fP.
.PP
The \fBhline\fP and \fBwhline\fP functions draw a horizontal (left to right)
line using \fIch\fP starting at the current cursor position in the window.
The
current cursor position is not changed.
The line is at most \fIn\fP characters
long, or as many as fit into the window.
.PP
The \fBvline\fP and \fBwvline\fP functions draw a vertical (top to bottom) line
using \fIch\fP starting at the current cursor position in the window.
The
current cursor position is not changed.
The line is at most \fIn\fP characters
long, or as many as fit into the window.
.SH RETURN VALUE
All routines return the integer \fBOK\fP.
The SVr4.0 manual says "or a
non-negative integer if \fBimmedok\fP is set", but this appears to be an error.
.PP
X/Open does not define any error conditions.
This implementation returns an error
if the window pointer is null.
.PP
Functions with a \*(``mv\*('' prefix first perform a cursor movement using
\fBwmove\fP, and return an error if the position is outside the window,
or if the window pointer is null.
.SH NOTES
The borders generated by these functions are \fIinside\fP borders (this
is also true of SVr4 curses, though the fact is not documented).
.PP
Note that \fBborder\fP and \fBbox\fP may be macros.
.SH PORTABILITY
These functions are described in the XSI Curses standard, Issue 4.
The standard specifies that they return \fBERR\fP on failure,
but specifies no error conditions.
.SH SEE ALSO
\fBcurses\fP(3X), \fBcurs_outopts\fP(3X).
